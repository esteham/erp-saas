-- Users Table
CREATE TABLE users (
        id INT AUTO_INCREMENT PRIMARY KEY,
        username VARCHAR(100) NOT NULL,
        first_name VARCHAR(100) NOT NULL,
        last_name VARCHAR(100) NOT NULL,
        email VARCHAR(100) UNIQUE NOT NULL,
        password VARCHAR(255) NOT NULL,
        role ENUM('user', 'provider', 'admin') DEFAULT 'user',
        document VARCHAR(255) DEFAULT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );

-- Providers Table
CREATE TABLE providers (
        id INT AUTO_INCREMENT PRIMARY KEY,
        user_id INT,
        skills TEXT,
        zone_id INT,
        is_available BOOLEAN DEFAULT TRUE,
        FOREIGN KEY (user_id) REFERENCES users(id),
        FOREIGN KEY (zone_id) REFERENCES zones(id)
        );

-- Zones Table
CREATE TABLE zones (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(100)
        );

-- Areas Table
CREATE TABLE areas (
        id INT AUTO_INCREMENT PRIMARY KEY,
        zone_id INT,
        name VARCHAR(100),
        FOREIGN KEY (zone_id) REFERENCES zones(id)
        );

-- Services Table
CREATE TABLE services (
        id INT AUTO_INCREMENT PRIMARY KEY,
        user_id INT,
        provider_id INT,
        area_id INT,
        service_type VARCHAR(100),
        base_price DECIMAL(10,2),
        final_price DECIMAL(10,2),
        status ENUM('pending', 'accepted', 'completed', 'cancelled') DEFAULT 'pending',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (user_id) REFERENCES users(id),
        FOREIGN KEY (provider_id) REFERENCES providers(id),
        FOREIGN KEY (area_id) REFERENCES areas(id)
        );

-- Pricing Rules Table
CREATE TABLE pricing_rules (
        id INT AUTO_INCREMENT PRIMARY KEY,
        zone_id INT,
        time_start TIME,
        time_end TIME,
        multiplier DECIMAL(3,2),
        FOREIGN KEY (zone_id) REFERENCES zones(id)
        );

-- Reviews Table
CREATE TABLE reviews (
        id INT AUTO_INCREMENT PRIMARY KEY,
        service_id INT,
        rating INT CHECK (rating >= 1 AND rating <= 5),
        comment TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (service_id) REFERENCES services(id)
        );

-- Notifications Table
CREATE TABLE notifications (
        id INT AUTO_INCREMENT PRIMARY KEY,
        user_id INT,
        message TEXT,
        is_read BOOLEAN DEFAULT FALSE,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (user_id) REFERENCES users(id)
        );
